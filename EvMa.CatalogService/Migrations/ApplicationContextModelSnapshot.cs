// <auto-generated />
using System;
using EvMa.CatalogService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvMa.CatalogService.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppAttributeSetProductAttribute", b =>
                {
                    b.Property<Guid>("AppAttributeSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppAttributeSetId", "AttributesId");

                    b.HasIndex("AttributesId");

                    b.ToTable("AppAttributeSetProductAttribute");
                });

            modelBuilder.Entity("AppCategoryAppProduct", b =>
                {
                    b.Property<Guid>("AppCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppCategoryId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("AppCategoryAppProduct");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppAttributeSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttributeSets");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppProductId");

                    b.HasIndex("AttributeId");

                    b.ToTable("AttributeValues");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("ChildCategoryIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RegularPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StockQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.PrimitiveCollection<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeSetId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AppCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppCategoryId");

                    b.HasIndex("AppProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.Models.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AppProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.Models.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("AppAttributeSetProductAttribute", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppAttributeSet", null)
                        .WithMany()
                        .HasForeignKey("AppAttributeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvMa.CatalogService.Data.Models.ProductAttribute", null)
                        .WithMany()
                        .HasForeignKey("AttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppCategoryAppProduct", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppCategory", null)
                        .WithMany()
                        .HasForeignKey("AppCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppProduct", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppAttributeValue", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppProduct", null)
                        .WithMany("AttributeValues")
                        .HasForeignKey("AppProductId");

                    b.HasOne("EvMa.CatalogService.Data.Models.ProductAttribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppProduct", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppAttributeSet", "AttributeSet")
                        .WithMany()
                        .HasForeignKey("AttributeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeSet");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.Models.Image", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppCategory", null)
                        .WithMany("Images")
                        .HasForeignKey("AppCategoryId");

                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppProduct", null)
                        .WithMany("Images")
                        .HasForeignKey("AppProductId");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.Models.Price", b =>
                {
                    b.HasOne("EvMa.CatalogService.Data.ApplicationModels.AppProduct", null)
                        .WithMany("Prices")
                        .HasForeignKey("AppProductId");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppCategory", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("EvMa.CatalogService.Data.ApplicationModels.AppProduct", b =>
                {
                    b.Navigation("AttributeValues");

                    b.Navigation("Images");

                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
